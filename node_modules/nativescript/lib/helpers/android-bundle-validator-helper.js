"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const constants_1 = require("../constants");
const version_validator_helper_1 = require("./version-validator-helper");
class AndroidBundleValidatorHelper extends version_validator_helper_1.VersionValidatorHelper {
    constructor($projectData, $errors, $options, $projectDataService) {
        super();
        this.$projectData = $projectData;
        this.$errors = $errors;
        this.$options = $options;
        this.$projectDataService = $projectDataService;
    }
    validateNoAab() {
        if (this.$options.aab) {
            this.$errors.fail(constants_1.AndroidBundleValidatorMessages.AAB_NOT_SUPPORTED_BY_COMMNAND_MESSAGE);
        }
    }
    validateRuntimeVersion(projectData) {
        if (this.$options.aab) {
            const androidRuntimeInfo = this.$projectDataService.getNSValue(projectData.projectDir, constants_1.TNS_ANDROID_RUNTIME_NAME);
            const androidRuntimeVersion = androidRuntimeInfo ? androidRuntimeInfo.version : "";
            const shouldThrowError = androidRuntimeVersion &&
                this.isValidVersion(androidRuntimeVersion) &&
                this.isVersionLowerThan(androidRuntimeVersion, AndroidBundleValidatorHelper.MIN_RUNTIME_VERSION);
            if (shouldThrowError) {
                this.$errors.failWithoutHelp(util.format(constants_1.AndroidBundleValidatorMessages.NOT_SUPPORTED_RUNTIME_VERSION, AndroidBundleValidatorHelper.MIN_RUNTIME_VERSION));
            }
        }
    }
}
AndroidBundleValidatorHelper.MIN_RUNTIME_VERSION = "5.0.0";
exports.AndroidBundleValidatorHelper = AndroidBundleValidatorHelper;
$injector.register("androidBundleValidatorHelper", AndroidBundleValidatorHelper);
